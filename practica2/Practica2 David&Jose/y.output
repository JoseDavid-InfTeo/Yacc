Grammar

    0 $accept: programa $end

    1 programa: declaracionesCtes main

    2 declaracionesCtes: /* empty */
    3                  | declaracionCte declaracionesCtes

    4 declaracionCte: '#' DEFINE ID valor_cte

    5 valor_cte: NUM_ENTERO
    6          | NUM_REAL
    7          | CADENA

    8 declaracionVbles: /* empty */
    9                 | declaracionVble declaracionVbles

   10 declaracionVble: tipo id ';'
   11                | tipo id '=' expr ';'

   12 tipo: INT
   13     | FLOAT
   14     | CHAR

   15 id: ID

   16 expr: val
   17     | val OPERADOR expr

   18 val: ID
   19    | valor_cte

   20 main: MAIN '{' cuerpo '}'

   21 cuerpo: declaracionVbles instrucciones

   22 instrucciones: /* empty */
   23              | instruccion instrucciones

   24 instruccion: asig ';'
   25            | visu ';'
   26            | lect ';'
   27            | cond
   28            | repe

   29 asig: ID '=' expr
   30     | ID OPERADOR2

   31 visu: PRINTF '(' listExpr ')'

   32 listExpr: /* empty */
   33         | expr
   34         | expr ',' listExpr

   35 lect: SCANF '(' CDC ',' OPERADOR ID ')'

   36 cond: bloqueIF
   37     | bloqueIF else

   38 bloqueIF: IF '(' expr ')' '{' instrucciones '}'

   39 else: ELSE '{' instrucciones '}'
   40     | ELSE cond

   41 repe: for
   42     | while

   43 for: FOR '(' inicia ';' expFOR ';' increm ')' '{' instrucciones '}'

   44 inicia: /* empty */
   45       | asig

   46 expFOR: /* empty */
   47       | expr

   48 increm: /* empty */
   49       | ID OPERADOR2

   50 while: WHILE '(' expr ')' '{' instrucciones '}'


Terminals, with rules where they appear

$end (0) 0
'#' (35) 4
'(' (40) 31 35 38 43 50
')' (41) 31 35 38 43 50
',' (44) 34 35
';' (59) 10 11 24 25 26 43
'=' (61) 11 29
'{' (123) 20 38 39 43 50
'}' (125) 20 38 39 43 50
error (256)
ID (258) 4 15 18 29 30 35 49
DEFINE (259) 4
NUM_ENTERO (260) 5
NUM_REAL (261) 6
CADENA (262) 7
INT (263) 12
FLOAT (264) 13
CHAR (265) 14
MAIN (266) 20
OPERADOR (267) 17 35
OPERADOR2 (268) 30 49
PRINTF (269) 31
IF (270) 38
FOR (271) 43
ELSE (272) 39 40
SCANF (273) 35
WHILE (274) 50
CDC (275) 35


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
programa (30)
    on left: 1, on right: 0
declaracionesCtes (31)
    on left: 2 3, on right: 1 3
declaracionCte (32)
    on left: 4, on right: 3
valor_cte (33)
    on left: 5 6 7, on right: 4 19
declaracionVbles (34)
    on left: 8 9, on right: 9 21
declaracionVble (35)
    on left: 10 11, on right: 9
tipo (36)
    on left: 12 13 14, on right: 10 11
id (37)
    on left: 15, on right: 10 11
expr (38)
    on left: 16 17, on right: 11 17 29 33 34 38 47 50
val (39)
    on left: 18 19, on right: 16 17
main (40)
    on left: 20, on right: 1
cuerpo (41)
    on left: 21, on right: 20
instrucciones (42)
    on left: 22 23, on right: 21 23 38 39 43 50
instruccion (43)
    on left: 24 25 26 27 28, on right: 23
asig (44)
    on left: 29 30, on right: 24 45
visu (45)
    on left: 31, on right: 25
listExpr (46)
    on left: 32 33 34, on right: 31 34
lect (47)
    on left: 35, on right: 26
cond (48)
    on left: 36 37, on right: 27 40
bloqueIF (49)
    on left: 38, on right: 36 37
else (50)
    on left: 39 40, on right: 37
repe (51)
    on left: 41 42, on right: 28
for (52)
    on left: 43, on right: 41
inicia (53)
    on left: 44 45, on right: 43
expFOR (54)
    on left: 46 47, on right: 43
increm (55)
    on left: 48 49, on right: 43
while (56)
    on left: 50, on right: 42


state 0

    0 $accept: . programa $end

    '#'  shift, and go to state 1

    $default  reduce using rule 2 (declaracionesCtes)

    programa           go to state 2
    declaracionesCtes  go to state 3
    declaracionCte     go to state 4


state 1

    4 declaracionCte: '#' . DEFINE ID valor_cte

    DEFINE  shift, and go to state 5


state 2

    0 $accept: programa . $end

    $end  shift, and go to state 6


state 3

    1 programa: declaracionesCtes . main

    MAIN  shift, and go to state 7

    main  go to state 8


state 4

    3 declaracionesCtes: declaracionCte . declaracionesCtes

    '#'  shift, and go to state 1

    $default  reduce using rule 2 (declaracionesCtes)

    declaracionesCtes  go to state 9
    declaracionCte     go to state 4


state 5

    4 declaracionCte: '#' DEFINE . ID valor_cte

    ID  shift, and go to state 10


state 6

    0 $accept: programa $end .

    $default  accept


state 7

   20 main: MAIN . '{' cuerpo '}'

    '{'  shift, and go to state 11


state 8

    1 programa: declaracionesCtes main .

    $default  reduce using rule 1 (programa)


state 9

    3 declaracionesCtes: declaracionCte declaracionesCtes .

    $default  reduce using rule 3 (declaracionesCtes)


state 10

    4 declaracionCte: '#' DEFINE ID . valor_cte

    NUM_ENTERO  shift, and go to state 12
    NUM_REAL    shift, and go to state 13
    CADENA      shift, and go to state 14

    valor_cte  go to state 15


state 11

   20 main: MAIN '{' . cuerpo '}'

    INT    shift, and go to state 16
    FLOAT  shift, and go to state 17
    CHAR   shift, and go to state 18

    $default  reduce using rule 8 (declaracionVbles)

    declaracionVbles  go to state 19
    declaracionVble   go to state 20
    tipo              go to state 21
    cuerpo            go to state 22


state 12

    5 valor_cte: NUM_ENTERO .

    $default  reduce using rule 5 (valor_cte)


state 13

    6 valor_cte: NUM_REAL .

    $default  reduce using rule 6 (valor_cte)


state 14

    7 valor_cte: CADENA .

    $default  reduce using rule 7 (valor_cte)


state 15

    4 declaracionCte: '#' DEFINE ID valor_cte .

    $default  reduce using rule 4 (declaracionCte)


state 16

   12 tipo: INT .

    $default  reduce using rule 12 (tipo)


state 17

   13 tipo: FLOAT .

    $default  reduce using rule 13 (tipo)


state 18

   14 tipo: CHAR .

    $default  reduce using rule 14 (tipo)


state 19

   21 cuerpo: declaracionVbles . instrucciones

    ID      shift, and go to state 23
    PRINTF  shift, and go to state 24
    IF      shift, and go to state 25
    FOR     shift, and go to state 26
    SCANF   shift, and go to state 27
    WHILE   shift, and go to state 28

    $default  reduce using rule 22 (instrucciones)

    instrucciones  go to state 29
    instruccion    go to state 30
    asig           go to state 31
    visu           go to state 32
    lect           go to state 33
    cond           go to state 34
    bloqueIF       go to state 35
    repe           go to state 36
    for            go to state 37
    while          go to state 38


state 20

    9 declaracionVbles: declaracionVble . declaracionVbles

    INT    shift, and go to state 16
    FLOAT  shift, and go to state 17
    CHAR   shift, and go to state 18

    $default  reduce using rule 8 (declaracionVbles)

    declaracionVbles  go to state 39
    declaracionVble   go to state 20
    tipo              go to state 21


state 21

   10 declaracionVble: tipo . id ';'
   11                | tipo . id '=' expr ';'

    ID  shift, and go to state 40

    id  go to state 41


state 22

   20 main: MAIN '{' cuerpo . '}'

    '}'  shift, and go to state 42


state 23

   29 asig: ID . '=' expr
   30     | ID . OPERADOR2

    OPERADOR2  shift, and go to state 43
    '='        shift, and go to state 44


state 24

   31 visu: PRINTF . '(' listExpr ')'

    '('  shift, and go to state 45


state 25

   38 bloqueIF: IF . '(' expr ')' '{' instrucciones '}'

    '('  shift, and go to state 46


state 26

   43 for: FOR . '(' inicia ';' expFOR ';' increm ')' '{' instrucciones '}'

    '('  shift, and go to state 47


state 27

   35 lect: SCANF . '(' CDC ',' OPERADOR ID ')'

    '('  shift, and go to state 48


state 28

   50 while: WHILE . '(' expr ')' '{' instrucciones '}'

    '('  shift, and go to state 49


state 29

   21 cuerpo: declaracionVbles instrucciones .

    $default  reduce using rule 21 (cuerpo)


state 30

   23 instrucciones: instruccion . instrucciones

    ID      shift, and go to state 23
    PRINTF  shift, and go to state 24
    IF      shift, and go to state 25
    FOR     shift, and go to state 26
    SCANF   shift, and go to state 27
    WHILE   shift, and go to state 28

    $default  reduce using rule 22 (instrucciones)

    instrucciones  go to state 50
    instruccion    go to state 30
    asig           go to state 31
    visu           go to state 32
    lect           go to state 33
    cond           go to state 34
    bloqueIF       go to state 35
    repe           go to state 36
    for            go to state 37
    while          go to state 38


state 31

   24 instruccion: asig . ';'

    ';'  shift, and go to state 51


state 32

   25 instruccion: visu . ';'

    ';'  shift, and go to state 52


state 33

   26 instruccion: lect . ';'

    ';'  shift, and go to state 53


state 34

   27 instruccion: cond .

    $default  reduce using rule 27 (instruccion)


state 35

   36 cond: bloqueIF .
   37     | bloqueIF . else

    ELSE  shift, and go to state 54

    $default  reduce using rule 36 (cond)

    else  go to state 55


state 36

   28 instruccion: repe .

    $default  reduce using rule 28 (instruccion)


state 37

   41 repe: for .

    $default  reduce using rule 41 (repe)


state 38

   42 repe: while .

    $default  reduce using rule 42 (repe)


state 39

    9 declaracionVbles: declaracionVble declaracionVbles .

    $default  reduce using rule 9 (declaracionVbles)


state 40

   15 id: ID .

    $default  reduce using rule 15 (id)


state 41

   10 declaracionVble: tipo id . ';'
   11                | tipo id . '=' expr ';'

    ';'  shift, and go to state 56
    '='  shift, and go to state 57


state 42

   20 main: MAIN '{' cuerpo '}' .

    $default  reduce using rule 20 (main)


state 43

   30 asig: ID OPERADOR2 .

    $default  reduce using rule 30 (asig)


state 44

   29 asig: ID '=' . expr

    ID          shift, and go to state 58
    NUM_ENTERO  shift, and go to state 12
    NUM_REAL    shift, and go to state 13
    CADENA      shift, and go to state 14

    valor_cte  go to state 59
    expr       go to state 60
    val        go to state 61


state 45

   31 visu: PRINTF '(' . listExpr ')'

    ID          shift, and go to state 58
    NUM_ENTERO  shift, and go to state 12
    NUM_REAL    shift, and go to state 13
    CADENA      shift, and go to state 14

    $default  reduce using rule 32 (listExpr)

    valor_cte  go to state 59
    expr       go to state 62
    val        go to state 61
    listExpr   go to state 63


state 46

   38 bloqueIF: IF '(' . expr ')' '{' instrucciones '}'

    ID          shift, and go to state 58
    NUM_ENTERO  shift, and go to state 12
    NUM_REAL    shift, and go to state 13
    CADENA      shift, and go to state 14

    valor_cte  go to state 59
    expr       go to state 64
    val        go to state 61


state 47

   43 for: FOR '(' . inicia ';' expFOR ';' increm ')' '{' instrucciones '}'

    ID  shift, and go to state 23

    $default  reduce using rule 44 (inicia)

    asig    go to state 65
    inicia  go to state 66


state 48

   35 lect: SCANF '(' . CDC ',' OPERADOR ID ')'

    CDC  shift, and go to state 67


state 49

   50 while: WHILE '(' . expr ')' '{' instrucciones '}'

    ID          shift, and go to state 58
    NUM_ENTERO  shift, and go to state 12
    NUM_REAL    shift, and go to state 13
    CADENA      shift, and go to state 14

    valor_cte  go to state 59
    expr       go to state 68
    val        go to state 61


state 50

   23 instrucciones: instruccion instrucciones .

    $default  reduce using rule 23 (instrucciones)


state 51

   24 instruccion: asig ';' .

    $default  reduce using rule 24 (instruccion)


state 52

   25 instruccion: visu ';' .

    $default  reduce using rule 25 (instruccion)


state 53

   26 instruccion: lect ';' .

    $default  reduce using rule 26 (instruccion)


state 54

   39 else: ELSE . '{' instrucciones '}'
   40     | ELSE . cond

    IF   shift, and go to state 25
    '{'  shift, and go to state 69

    cond      go to state 70
    bloqueIF  go to state 35


state 55

   37 cond: bloqueIF else .

    $default  reduce using rule 37 (cond)


state 56

   10 declaracionVble: tipo id ';' .

    $default  reduce using rule 10 (declaracionVble)


state 57

   11 declaracionVble: tipo id '=' . expr ';'

    ID          shift, and go to state 58
    NUM_ENTERO  shift, and go to state 12
    NUM_REAL    shift, and go to state 13
    CADENA      shift, and go to state 14

    valor_cte  go to state 59
    expr       go to state 71
    val        go to state 61


state 58

   18 val: ID .

    $default  reduce using rule 18 (val)


state 59

   19 val: valor_cte .

    $default  reduce using rule 19 (val)


state 60

   29 asig: ID '=' expr .

    $default  reduce using rule 29 (asig)


state 61

   16 expr: val .
   17     | val . OPERADOR expr

    OPERADOR  shift, and go to state 72

    $default  reduce using rule 16 (expr)


state 62

   33 listExpr: expr .
   34         | expr . ',' listExpr

    ','  shift, and go to state 73

    $default  reduce using rule 33 (listExpr)


state 63

   31 visu: PRINTF '(' listExpr . ')'

    ')'  shift, and go to state 74


state 64

   38 bloqueIF: IF '(' expr . ')' '{' instrucciones '}'

    ')'  shift, and go to state 75


state 65

   45 inicia: asig .

    $default  reduce using rule 45 (inicia)


state 66

   43 for: FOR '(' inicia . ';' expFOR ';' increm ')' '{' instrucciones '}'

    ';'  shift, and go to state 76


state 67

   35 lect: SCANF '(' CDC . ',' OPERADOR ID ')'

    ','  shift, and go to state 77


state 68

   50 while: WHILE '(' expr . ')' '{' instrucciones '}'

    ')'  shift, and go to state 78


state 69

   39 else: ELSE '{' . instrucciones '}'

    ID      shift, and go to state 23
    PRINTF  shift, and go to state 24
    IF      shift, and go to state 25
    FOR     shift, and go to state 26
    SCANF   shift, and go to state 27
    WHILE   shift, and go to state 28

    $default  reduce using rule 22 (instrucciones)

    instrucciones  go to state 79
    instruccion    go to state 30
    asig           go to state 31
    visu           go to state 32
    lect           go to state 33
    cond           go to state 34
    bloqueIF       go to state 35
    repe           go to state 36
    for            go to state 37
    while          go to state 38


state 70

   40 else: ELSE cond .

    $default  reduce using rule 40 (else)


state 71

   11 declaracionVble: tipo id '=' expr . ';'

    ';'  shift, and go to state 80


state 72

   17 expr: val OPERADOR . expr

    ID          shift, and go to state 58
    NUM_ENTERO  shift, and go to state 12
    NUM_REAL    shift, and go to state 13
    CADENA      shift, and go to state 14

    valor_cte  go to state 59
    expr       go to state 81
    val        go to state 61


state 73

   34 listExpr: expr ',' . listExpr

    ID          shift, and go to state 58
    NUM_ENTERO  shift, and go to state 12
    NUM_REAL    shift, and go to state 13
    CADENA      shift, and go to state 14

    $default  reduce using rule 32 (listExpr)

    valor_cte  go to state 59
    expr       go to state 62
    val        go to state 61
    listExpr   go to state 82


state 74

   31 visu: PRINTF '(' listExpr ')' .

    $default  reduce using rule 31 (visu)


state 75

   38 bloqueIF: IF '(' expr ')' . '{' instrucciones '}'

    '{'  shift, and go to state 83


state 76

   43 for: FOR '(' inicia ';' . expFOR ';' increm ')' '{' instrucciones '}'

    ID          shift, and go to state 58
    NUM_ENTERO  shift, and go to state 12
    NUM_REAL    shift, and go to state 13
    CADENA      shift, and go to state 14

    $default  reduce using rule 46 (expFOR)

    valor_cte  go to state 59
    expr       go to state 84
    val        go to state 61
    expFOR     go to state 85


state 77

   35 lect: SCANF '(' CDC ',' . OPERADOR ID ')'

    OPERADOR  shift, and go to state 86


state 78

   50 while: WHILE '(' expr ')' . '{' instrucciones '}'

    '{'  shift, and go to state 87


state 79

   39 else: ELSE '{' instrucciones . '}'

    '}'  shift, and go to state 88


state 80

   11 declaracionVble: tipo id '=' expr ';' .

    $default  reduce using rule 11 (declaracionVble)


state 81

   17 expr: val OPERADOR expr .

    $default  reduce using rule 17 (expr)


state 82

   34 listExpr: expr ',' listExpr .

    $default  reduce using rule 34 (listExpr)


state 83

   38 bloqueIF: IF '(' expr ')' '{' . instrucciones '}'

    ID      shift, and go to state 23
    PRINTF  shift, and go to state 24
    IF      shift, and go to state 25
    FOR     shift, and go to state 26
    SCANF   shift, and go to state 27
    WHILE   shift, and go to state 28

    $default  reduce using rule 22 (instrucciones)

    instrucciones  go to state 89
    instruccion    go to state 30
    asig           go to state 31
    visu           go to state 32
    lect           go to state 33
    cond           go to state 34
    bloqueIF       go to state 35
    repe           go to state 36
    for            go to state 37
    while          go to state 38


state 84

   47 expFOR: expr .

    $default  reduce using rule 47 (expFOR)


state 85

   43 for: FOR '(' inicia ';' expFOR . ';' increm ')' '{' instrucciones '}'

    ';'  shift, and go to state 90


state 86

   35 lect: SCANF '(' CDC ',' OPERADOR . ID ')'

    ID  shift, and go to state 91


state 87

   50 while: WHILE '(' expr ')' '{' . instrucciones '}'

    ID      shift, and go to state 23
    PRINTF  shift, and go to state 24
    IF      shift, and go to state 25
    FOR     shift, and go to state 26
    SCANF   shift, and go to state 27
    WHILE   shift, and go to state 28

    $default  reduce using rule 22 (instrucciones)

    instrucciones  go to state 92
    instruccion    go to state 30
    asig           go to state 31
    visu           go to state 32
    lect           go to state 33
    cond           go to state 34
    bloqueIF       go to state 35
    repe           go to state 36
    for            go to state 37
    while          go to state 38


state 88

   39 else: ELSE '{' instrucciones '}' .

    $default  reduce using rule 39 (else)


state 89

   38 bloqueIF: IF '(' expr ')' '{' instrucciones . '}'

    '}'  shift, and go to state 93


state 90

   43 for: FOR '(' inicia ';' expFOR ';' . increm ')' '{' instrucciones '}'

    ID  shift, and go to state 94

    $default  reduce using rule 48 (increm)

    increm  go to state 95


state 91

   35 lect: SCANF '(' CDC ',' OPERADOR ID . ')'

    ')'  shift, and go to state 96


state 92

   50 while: WHILE '(' expr ')' '{' instrucciones . '}'

    '}'  shift, and go to state 97


state 93

   38 bloqueIF: IF '(' expr ')' '{' instrucciones '}' .

    $default  reduce using rule 38 (bloqueIF)


state 94

   49 increm: ID . OPERADOR2

    OPERADOR2  shift, and go to state 98


state 95

   43 for: FOR '(' inicia ';' expFOR ';' increm . ')' '{' instrucciones '}'

    ')'  shift, and go to state 99


state 96

   35 lect: SCANF '(' CDC ',' OPERADOR ID ')' .

    $default  reduce using rule 35 (lect)


state 97

   50 while: WHILE '(' expr ')' '{' instrucciones '}' .

    $default  reduce using rule 50 (while)


state 98

   49 increm: ID OPERADOR2 .

    $default  reduce using rule 49 (increm)


state 99

   43 for: FOR '(' inicia ';' expFOR ';' increm ')' . '{' instrucciones '}'

    '{'  shift, and go to state 100


state 100

   43 for: FOR '(' inicia ';' expFOR ';' increm ')' '{' . instrucciones '}'

    ID      shift, and go to state 23
    PRINTF  shift, and go to state 24
    IF      shift, and go to state 25
    FOR     shift, and go to state 26
    SCANF   shift, and go to state 27
    WHILE   shift, and go to state 28

    $default  reduce using rule 22 (instrucciones)

    instrucciones  go to state 101
    instruccion    go to state 30
    asig           go to state 31
    visu           go to state 32
    lect           go to state 33
    cond           go to state 34
    bloqueIF       go to state 35
    repe           go to state 36
    for            go to state 37
    while          go to state 38


state 101

   43 for: FOR '(' inicia ';' expFOR ';' increm ')' '{' instrucciones . '}'

    '}'  shift, and go to state 102


state 102

   43 for: FOR '(' inicia ';' expFOR ';' increm ')' '{' instrucciones '}' .

    $default  reduce using rule 43 (for)
